name: 1. CI - Test & Security

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # ===============================
  # üß© Backend Tests
  # ===============================
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Tests
        run: mvn -B test --no-transfer-progress

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: backend/target/surefire-reports/

  # ===============================
  # üé® Frontend Tests
  # ===============================
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests (Vitest)
        run: npm test

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results
          path: frontend/coverage/

  # ===============================
  # üîí Security Scan
  # ===============================
  security-scan:
    name: Security Scanning (Trivy)
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]

    steps:
      - uses: actions/checkout@v4

      # 1Ô∏è‚É£ Install Trivy via apt
      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy
          trivy --version

      # 2Ô∏è‚É£ Download the HTML template for report generation
      - name: Download Trivy HTML template
        run: |
          mkdir -p contrib
          curl -sSL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl -o contrib/html.tpl

      # 3Ô∏è‚É£ Run Trivy scan for Backend
      - name: Run Trivy vulnerability scanner (Backend)
        run: |
          trivy fs ./backend \
            --format template \
            --template "@contrib/html.tpl" \
            -o trivy-backend-report.html \
            --exit-code 0 \
            --ignore-unfixed \
            --severity CRITICAL,HIGH

      # 4Ô∏è‚É£ Run Trivy scan for Frontend
      - name: Run Trivy vulnerability scanner (Frontend)
        run: |
          trivy fs ./frontend \
            --format template \
            --template "@contrib/html.tpl" \
            -o trivy-frontend-report.html \
            --exit-code 0 \
            --ignore-unfixed \
            --severity CRITICAL,HIGH

      # 5Ô∏è‚É£ Upload the HTML reports
      - name: Upload Trivy Reports
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: |
            trivy-backend-report.html
            trivy-frontend-report.html

      # 6Ô∏è‚É£ Notify Success
      - name: Notify Success
        if: success()
        run: echo "‚úÖ Security scan completed successfully."
