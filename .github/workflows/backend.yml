name: Backend — Build, Test & Deploy (VM + Ansible)

on:
  push:
    paths:
      - "apps/backend/**"
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

env:
  RG: project2-teaf
  OPS_VM: teaf3tier-vm-ops
  APP_DIR: apps/backend

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Build & test (Maven)
        run: mvn -B clean test package
        working-directory: ${{ env.APP_DIR }}

      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Backend Tests
          path: ${{ env.APP_DIR }}/target/surefire-reports/*.xml
          reporter: java-junit

      # تسجيل دخول Azure بـ OIDC (مفضل) أو JSON creds
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ادفع الـ jar إلى /opt/artifacts/backend على vm-ops وشغّل ansible هناك
      - name: Deploy to vm-ops via Run-Command
        run: |
          set -e
          # ارفع الـ jar كأرتيفاكت مؤقت على الـ VM عبر git pull
          az vm run-command invoke \
            -g "${{ env.RG }}" -n "${{ env.OPS_VM }}" \
            --command-id RunShellScript \
            --scripts '
              set -e
              mkdir -p ~/project
              if [ ! -d ~/project/devops-project2-ih-teaf ]; then
                git clone https://github.com/teafalahmadi/devops-project2-ih-teaf.git ~/project/devops-project2-ih-teaf
              else
                cd ~/project/devops-project2-ih-teaf && git pull --rebase
              fi
            '
          # انسخي jar الناتج إلى vm-ops
          JAR_PATH=$(ls ${{ env.APP_DIR }}/target/*.jar | head -n1)
          az vm run-command invoke \
            -g "${{ env.RG }}" -n "${{ env.OPS_VM }}" \
            --command-id RunShellScript \
            --scripts "
              set -e
              sudo mkdir -p /opt/artifacts/backend
              cat > /opt/artifacts/backend/app.jar.base64 <<'EOF'
              $(base64 -w0 $JAR_PATH)
              EOF
              base64 -d /opt/artifacts/backend/app.jar.base64 | sudo tee /opt/artifacts/backend/app.jar >/dev/null
              sudo rm -f /opt/artifacts/backend/app.jar.base64
            "
          # شغّل ansible على vm-ops لينشر التحديث على vm-backend
          az vm run-command invoke \
            -g "${{ env.RG }}" -n "${{ env.OPS_VM }}" \
            --command-id RunShellScript \
            --scripts '
              set -e
              source ~/ansible-venv/bin/activate || true
              cd ~/project/devops-project2-ih-teaf
              ansible-playbook -i config/ansible/inventories/prod/hosts.ini config/ansible/site-backend.yml
            '

      # فحص صحة عبر Application G
